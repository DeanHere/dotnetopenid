#summary How to write an OpenID Provider using DotNetOpenId

*document in progress*

This tutorial will assume the reader is familiar with Visual Studio 2008 and has basic skills building web sites and hosting them on IIS.  Some samples of working Providers are included with DotNetOpenId as well for your reference or as the baseline for your site.

== Considerations ==
You should consider what some of your design goals are for your Provider before starting.  Here are a few topics you should decide on.

 # Determine what your users' identity URLs will look like.  Some examples include:
  * http://username.someprovider.com/
  * http://www.someprovider.com/username
  * http://www.someprovider.com/user/username
  * http://www.someprovider.com/user.aspx?user=username
 # Decide whether to offer HTTPS security for your users.  You should decide this up front rather than start with HTTP and then offer HTTPS later for your users.  For them to "upgrade" their accounts to use HTTPS as their identity will require that they restart their identity with any and all web sites they previously used your Provider to log into.  All providers should offer HTTPS at the start to protect users from DNS poisoning attacks that will allow their identities to be stolen and passwords to be phished.
 # Will you use ASP.NET?  Although DotNetOpenId will work for you whether you use ASP.NET as your web hosting platform or not, leveraging ASP.NET makes things a lot simpler.
 # Will you use the included ASP.NET DotNetOpenId controls?  You can implement your provider using the included ASP.NET controls or without them.  Using them still leaves a lot of flexibility to your app while making building and maintenance much easier.  
 # Will you be hosting on a web farm?  You can actually start with 'no' as your answer for now and then upgrade as traffic to your Provider increases.  DotNetOpenId supports both scenarios, but if you'll be hosting on a web farm you will need to build your own state-sharing mechanism so that all servers share the OpenID state that is necessary for your users to authenticate.

== Scope of tutorial ==

To narrow the scope of this tutorial, this tutorial will:
 # Use ASP.NET and the controls included in the library.
 # Will not be configured to run correctly on a web farm.

If your decisions lie outside the scope of this tutorial, read through anyway to get an idea of what's necessary, and then add a comment at the bottom of this wiki page giving your scenario and asking for an expanded or alternate tutorial.

== First steps ==